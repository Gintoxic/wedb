adm4r<-adm4[which(adm4$NAME_1=="Rheinland-Pfalz"),]
adm4rf<-simplifySpFrame(adm4r)
source('C:/Users/User/Dropbox/Work/wedb/functions.R')
adm4rf<-simlifySpFrame(adm4r)
adm4rf
res<-sqldf("select * from impf4 i left join adm4rf a on i.Gebietsbezeichnung=a.ID_4")
### Einlesen
url <- "http://www.wahlen.rlp.de/ltw/wahlen/2016/downloads/lwGesamt.txt"
imp<-read.table(url,sep=";", header = T, stringsAsFactors = F, encoding = "ANSI")
str(imp)
ind<-which(imp$Gebietsschlüssel %in% gebschl)
Wahlkreis
impf<-imp[-ind,]
impf$Gebietsbezeichnung
wkind<-which(regexpr('Wahlkreis', impf$Gebietsbezeichnung)>-1)
length(wkind)
impf2<-impf[-wkind,]
impf2$Gebietsbezeichnung
vgind<-which(regexpr('VG', impf2$Gebietsbezeichnung)>-1)
impf3<-impf2[-vgind,]
impf3$Gebietsbezeichnung
krind<-which(regexpr('kreis', impf3$Gebietsbezeichnung)>-1)
impf4<-impf3[-krind,]
sum(impf4$Wahlberechtigte)
impf4$Gebietsbezeichnung
adm4 <- raster::getData('GADM', country='DEU', level=4)
adm4r<-adm4[which(adm4$NAME_1=="Rheinland-Pfalz"),]
source("functions.R")
adm4rf<-simlifySpFrame(adm4r)
res<-sqldf("select * from impf4 i left join adm4rf a on i.Gebietsbezeichnung=a.ID_4")
### Einlesen
url <- "http://www.wahlen.rlp.de/ltw/wahlen/2016/downloads/lwGesamt.txt"
imp<-read.table(url,sep=";", header = T, stringsAsFactors = F, encoding = "ANSI")
url2 <- "http://www.wahlen.rlp.de/ltw/wahlen/2016/downloads/lw000.txt"
imp2<-read.table(url2,sep=";", header = T, stringsAsFactors = F, encoding = "ANSI")
gebschl<-imp2$Gebietsschlüssel
str(imp)
ind<-which(imp$Gebietsschlüssel %in% gebschl)
Wahlkreis
impf<-imp[-ind,]
impf$Gebietsbezeichnung
wkind<-which(regexpr('Wahlkreis', impf$Gebietsbezeichnung)>-1)
length(wkind)
impf2<-impf[-wkind,]
impf2$Gebietsbezeichnung
vgind<-which(regexpr('VG', impf2$Gebietsbezeichnung)>-1)
impf3<-impf2[-vgind,]
impf3$Gebietsbezeichnung
krind<-which(regexpr('kreis', impf3$Gebietsbezeichnung)>-1)
impf4<-impf3[-krind,]
sum(impf4$Wahlberechtigte)
impf4$Gebietsbezeichnung
adm4 <- raster::getData('GADM', country='DEU', level=4)
adm4r<-adm4[which(adm4$NAME_1=="Rheinland-Pfalz"),]
source("functions.R")
adm4rf<-simlifySpFrame(adm4r)
res<-sqldf("select * from impf4 i left join adm4rf a on i.Gebietsbezeichnung=a.ID_4")
res
res$NAME_1
table(res$NAME_1)
res<-sqldf("select * from impf4 i left join adm4rf a on i.Gebietsbezeichnung=a.ID_4")
res$NAME_1
res<-sqldf("select i.*, a.ID_4, a.NAME_4 from impf4 i left join adm4rf a on i.Gebietsbezeichnung=a.NAME_4")
res<-sqldf("select i.*, a.ID_1, a.NAME_1, a.ID_2, a.NAME_2, a.ID_3, a.NAME_3, a.ID_4, a.NAME_4 from impf4 i left join adm4rf a on i.Gebietsbezeichnung=a.NAME_4")
table(res$NAME_1)
table(res$NAME_1, useNA = T)
table(res$NAME_1)
dim(res)
res<-sqldf("select i.*, a.ID_1, a.NAME_1, a.ID_2, a.NAME_2, a.ID_3, a.NAME_3, a.ID_4, a.NAME_4 from  adm4rf left join impf4 i a on i.Gebietsbezeichnung=a.NAME_4")
res<-sqldf("select i.*, a.ID_1, a.NAME_1, a.ID_2, a.NAME_2, a.ID_3, a.NAME_3, a.ID_4, a.NAME_4 from  adm4rf left join impf4 i a on i.Gebietsbezeichnung=a.NAME_4")
res<-sqldf("select a.*, i.Wahlberechtigte  adm4rf left join impf4 i a on i.Gebietsbezeichnung=a.NAME_4")
res<-sqldf("select a.*, i.Wahlberechtigte  from adm4rf left join impf4 i a on i.Gebietsbezeichnung=a.NAME_4")
res<-sqldf("select a.*, i.Wahlberechtigte from adm4rf a left join impf4 i on i.Gebietsbezeichnung=a.NAME_4")
sum(res$Wahlberechtigte)
res<-sqldf("select a.*, i.Wahlberechtigte from adm4rf a left join impf4 i on a.NAME_4=i.Gebietsbezeichnung")
res
sum(res$Wahlberechtigte)
View(res)
impf4$Wahlberechtigte
sum(impf4$Wahlberechtigte)
sum(impf4$Gebietsbezeichnung)
impf4$Gebietsbezeichnung
str(impf4$Gebietsbezeichnung)
res<-sqldf("select a.*, i.Wahlberechtigte from adm4rf a left join impf4 i on a.NAME_4=i.Gebietsbezeichnung")
sum(res$Wahlberechtigte)
sum(res$Wahlberechtigte, na.rm = T)
res<-sqldf("select i.*, a.ID_1, a.NAME_1, a.ID_2, a.NAME_2, a.ID_3, a.NAME_3, a.ID_4, a.NAME_4 from impf4 i left join adm4rf a on i.Gebietsbezeichnung=a.NAME_4")
table(res$NAME_1)
dim(res)
table(impf4$Gebietsbezeichnung)
table(impf4$Gebietsbezeichnung)>1
which(table(impf4$Gebietsbezeichnung)>1)
tab<-table(impf4$Gebietsbezeichnung)>1
which(tab>1)
tab<-table(impf4$Gebietsbezeichnung)>1
tab
which(tab)
tab[which(tab)]
table(impf4$Gebietsbezeichnung)[which(tab)]
tab<-table(adm4rf$NAME_4)>1
tab
table(adm4rf$NAME_4)[which(tab)]
tab<-table(impf4$Gebietsbezeichnung)>1
table(impf4$Gebietsbezeichnung)[which(tab)]
tab<-table(adm4rf$NAME_4)>1
table(adm4rf$NAME_4)[which(tab)]
source('C:/Users/User/Dropbox/Work/wedb/functions.R')
library(sp)
library(maptools)
library(rgeos)
library(ggmap)
library(raster) #getData
library(gridExtra)
#library(xlsx)
source("functions.R")
#adm0 <- raster::getData('GADM', country='DEU', level=0)
#adm1 <- raster::getData('GADM', country='DEU', level=1)
adm2 <- raster::getData('GADM', country='DEU', level=2)
adm3 <- raster::getData('GADM', country='DEU', level=3)
#adm4 <- raster::getData('GADM', country='DEU', level=4)
rlptemp<-adm3[which(adm3$NAME_1=="Rheinland-Pfalz"),]
rlpframe<-simlifySpFrame(rlptemp)
### Einlesen
url <- "http://www.wahlen.rlp.de/ltw/wahlen/2016/downloads/lw000.txt"
imp<-read.table(url,sep=";", header = T, stringsAsFactors = F, encoding = "ANSI")
gebschl<-imp$Gebietsschlüssel
### Indizes bestimmen
lkind<-which(regexpr('kreis', imp$Gebietsbezeichnung)>-1)
vgind<-which(regexpr('VG', imp$Gebietsbezeichnung)>-1)
kfind<-which(regexpr('Kreisfreie', imp$Gebietsbezeichnung)>-1)
laind<-1
### Splitten
lk<-imp[lkind,]
vg<-imp[vgind,]
kf<-imp[kfind,]
la<-imp[laind,]
vg$Gebietsbezeichnung1<-gsub(", VG","",vg$Gebietsbezeichnung)
vg$Gebietsbezeichnung2<-gsub("-"," ",vg$Gebietsbezeichnung1)
library(sqldf)
rlpframe2<-rlpframe[which(rlpframe$NAME_3!="Bad Kreuznach"),]
vg2<-sqldf("select v.*, coalesce(r1.ID_3,r2.ID_3) as ID_3 from vg v
left join rlpframe2 r1
on v.Gebietsbezeichnung1=r1.NAME_3
left join rlpframe2 r2
on v.Gebietsbezeichnung2=r2.NAME_3")
vg2[, c("ID_3", "Gebietsbezeichnung")]
vg2[which(is.na(vg2$ID_3)), c("Gebietsbezeichnung")]
not_in<-which(!rlpframe$ID_3 %in% as.integer(names(table(vg2$ID_3))))
rlpframe[not_in,c("ID_3", "NAME_3")]
vg2$ID_3[13]<-3635L
vg2$ID_3[14]<-3637L
vg2$ID_3[49]<-3736L
vg2$ID_3[57]<-3782L
vg2$ID_3[150]<-3765L
# Es konnten nicht zugewiesen werden: Bad Kreuznach, VG,  Maikammer, VG,   Rheinauen, VG
###################################################
kf$Gebietsbezeichnung
kf$Gebietsbezeichnung1<-gsub(", Kreisfreie Stadt","",kf$Gebietsbezeichnung)
kf$Gebietsbezeichnung2<-NA
kf2<-sqldf("select k.*, r1.ID_1, r1.ID_2, r1.ID_3  from kf k
left join rlpframe2 r1
on k.Gebietsbezeichnung1=r1.NAME_3")
kf2[, c("ID_3", "Gebietsbezeichnung")]
#vg$Gebietsbezeichnung2<-gsub("-"," ",vg$Gebietsbezeichnung1)
not_in<-which(!rlpframe$ID_3 %in% c(as.integer(names(table(vg2$ID_3))),as.integer(names(table(kf2$ID_3)))) )
rlpframe[not_in,c("ID_3", "NAME_3")]
dim(kf2)
dim(vg2)
vb<-rbind(vg2)
rlptemp<-adm3[which(adm3$NAME_1=="Rheinland-Pfalz"),]
rlpframe<-simlifySpFrame(rlptemp)
source("functions.R")
rlpframe<-simplifySpFrame(rlptemp)
url <- "http://www.wahlen.rlp.de/ltw/wahlen/2016/downloads/lw000.txt"
imp<-read.table(url,sep=";", header = T, stringsAsFactors = F, encoding = "ANSI")
gebschl<-imp$Gebietsschlüssel
### Indizes bestimmen
lkind<-which(regexpr('kreis', imp$Gebietsbezeichnung)>-1)
vgind<-which(regexpr('VG', imp$Gebietsbezeichnung)>-1)
kfind<-which(regexpr('Kreisfreie', imp$Gebietsbezeichnung)>-1)
laind<-1
### Splitten
lk<-imp[lkind,]
vg<-imp[vgind,]
kf<-imp[kfind,]
la<-imp[laind,]
vg$Gebietsbezeichnung1<-gsub(", VG","",vg$Gebietsbezeichnung)
vg$Gebietsbezeichnung2<-gsub("-"," ",vg$Gebietsbezeichnung1)
library(sqldf)
rlpframe2<-rlpframe[which(rlpframe$NAME_3!="Bad Kreuznach"),]
vg2<-sqldf("select v.*, coalesce(r1.ID_3,r2.ID_3) as ID_3 from vg v
left join rlpframe2 r1
on v.Gebietsbezeichnung1=r1.NAME_3
left join rlpframe2 r2
on v.Gebietsbezeichnung2=r2.NAME_3")
vg2[, c("ID_3", "Gebietsbezeichnung")]
vg2[which(is.na(vg2$ID_3)), c("Gebietsbezeichnung")]
not_in<-which(!rlpframe$ID_3 %in% as.integer(names(table(vg2$ID_3))))
rlpframe[not_in,c("ID_3", "NAME_3")]
vg2$ID_3[13]<-3635L
vg2$ID_3[14]<-3637L
vg2$ID_3[49]<-3736L
vg2$ID_3[57]<-3782L
vg2$ID_3[150]<-3765L
# Es konnten nicht zugewiesen werden: Bad Kreuznach, VG,  Maikammer, VG,   Rheinauen, VG
###################################################
kf$Gebietsbezeichnung
kf$Gebietsbezeichnung1<-gsub(", Kreisfreie Stadt","",kf$Gebietsbezeichnung)
kf$Gebietsbezeichnung2<-NA
kf2<-sqldf("select k.*, r1.ID_1, r1.ID_2, r1.ID_3  from kf k
left join rlpframe2 r1
on k.Gebietsbezeichnung1=r1.NAME_3")
kf2[, c("ID_3", "Gebietsbezeichnung")]
#vg$Gebietsbezeichnung2<-gsub("-"," ",vg$Gebietsbezeichnung1)
not_in<-which(!rlpframe$ID_3 %in% c(as.integer(names(table(vg2$ID_3))),as.integer(names(table(kf2$ID_3)))) )
rlpframe[not_in,c("ID_3", "NAME_3")]
dim(kf2)
dim(vg2)
vb<-rbind(vg2)
#dim(vb_kf)
####################################################
rm(list="rlptemp2")
rlptemp2<-adm2[which(adm2$NAME_1=="Rheinland-Pfalz"),]
rlpframe2<-simlifySpFrame(rlptemp2)
rlpframe2$NAME_2
rlpframe2a<-rlpframe2[which(rlpframe2$NAME_2!="Kaiserslautern"),]
rlpframe2[which(rlpframe2$NAME_2=="Kaiserslautern"),]
lk$Gebietsbezeichnung
lk$Gebietsbezeichnung1<-gsub(", Landkreis","",lk$Gebietsbezeichnung)
lk$Gebietsbezeichnung2<-NA
table(lk$Gebietsbezeichnung1)
table(lk$Gebietsbezeichnung2)
lk2<-sqldf("select k.*, r.ID_1, r.ID_2, 0 as ID_3 from lk k
left join rlpframe2a r
on k.Gebietsbezeichnung1=r.NAME_2")
lk2$ID_1[2]<-11
lk2$ID_2[2]<-298L #Altenkirchen
lk2$ID_1[19]<-11
lk2$ID_2[19]<-310L #Kaiserslautern
#11 Rheinland-Pfalz  310 Kaiserslautern
lk2[, c("ID_2", "Gebietsbezeichnung1")]
dim(kf2)
dim(lk2)
names(kf2)==names(lk2)
lk_kf<-rbind(kf2,lk2)
dim(lk_kf)
vb
save(list = "vb", file="vb.Rdata")
vg<-rbind(vg2)
save(list = "vg", file="vg.Rdata")
load( file="lk_kf.Rdata")
load(file="vb.Rdata")
source("functions.R")
colnames(vb)
adm3 <- raster::getData('GADM', country='DEU', level=3)
adm3rlp<-adm2[which(adm2$NAME_1=="Rheinland-Pfalz"),]
adm3rlps<-simlifySpFrame(adm2rlp)
vb_<-sqldf("select v.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from vb v left join adm3rlps a on v.ID_3=a.ID_3")
colnames(vb)
adm3 <- raster::getData('GADM', country='DEU', level=3)
adm3rlp<-adm2[which(adm2$NAME_1=="Rheinland-Pfalz"),]
adm3rlps<-simlifySpFrame(adm2rlp)
vb_<-sqldf("select v.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from vb v left join adm3rlps a on v.ID_3=a.ID_3")
adm3rlps<-simlifySpFrame(adm3rlp)
load( file="lk_kf.Rdata")
load(file="vb.Rdata")
source("functions.R")
#lkkf<-lk_kf[,c("Gebietsbezeichnung","ID_1","ID_2","ID_3")]
colnames(lk_kf)
adm2 <- raster::getData('GADM', country='DEU', level=2)
adm2rlp<-adm2[which(adm2$NAME_1=="Rheinland-Pfalz"),]
adm2rlps<-simlifySpFrame(adm2rlp)
lkkf<-sqldf("select lk.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from lk_kf lk left join adm2rlps a on lk.ID_2=a.ID_2")
plot(adm2rlp)
str(adm2rlps)
##############################################################
colnames(vb)
adm3 <- raster::getData('GADM', country='DEU', level=3)
adm3rlp<-adm2[which(adm2$NAME_1=="Rheinland-Pfalz"),]
adm3rlps<-simlifySpFrame(adm3rlp)
vb_<-sqldf("select v.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from vb v left join adm3rlps a on v.ID_3=a.ID_3")
adm3rlps<-simplifySpFrame(adm3rlp)
vb_<-sqldf("select v.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from vb v left join adm3rlps a on v.ID_3=a.ID_3")
adm3 <- raster::getData('GADM', country='DEU', level=3)
adm3rlp<-adm2[which(adm2$NAME_1=="Rheinland-Pfalz"),]
adm3rlps<-simplifySpFrame(adm3rlp)
vb_<-sqldf("select v.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from vb v left join adm3rlps a on v.ID_3=a.ID_3")
str(adm3rlps)
adm3 <- raster::getData('GADM', country='DEU', level=3)
adm3rlp<-adm2[which(adm3$NAME_1=="Rheinland-Pfalz"),]
adm3rlps<-simplifySpFrame(adm3rlp)
str(adm3rlps)
vb_<-sqldf("select v.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from vb v left join adm3rlps a on v.ID_3=a.ID_3")
str(adm3rlps)
colnames(vb)
adm3 <- raster::getData('GADM', country='DEU', level=3)
adm3
adm3rlp<-adm2[which(adm3$NAME_1=="Rheinland-Pfalz"),]
adm3rlp<-adm3[which(adm3$NAME_1=="Rheinland-Pfalz"),]
adm3rlps<-simplifySpFrame(adm3rlp)
str(adm3rlps)
vb_<-sqldf("select v.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from vb v left join adm3rlps a on v.ID_3=a.ID_3")
vg_temp<-vg2
library(sp)
library(maptools)
library(rgeos)
library(ggmap)
library(raster) #getData
library(gridExtra)
#library(xlsx)
source("functions.R")
#adm0 <- raster::getData('GADM', country='DEU', level=0)
#adm1 <- raster::getData('GADM', country='DEU', level=1)
adm2 <- raster::getData('GADM', country='DEU', level=2)
adm3 <- raster::getData('GADM', country='DEU', level=3)
#adm4 <- raster::getData('GADM', country='DEU', level=4)
rlptemp<-adm3[which(adm3$NAME_1=="Rheinland-Pfalz"),]
rlpframe<-simplifySpFrame(rlptemp)
### Einlesen
url <- "http://www.wahlen.rlp.de/ltw/wahlen/2016/downloads/lw000.txt"
imp<-read.table(url,sep=";", header = T, stringsAsFactors = F, encoding = "ANSI")
gebschl<-imp$Gebietsschlüssel
### Indizes bestimmen
lkind<-which(regexpr('kreis', imp$Gebietsbezeichnung)>-1)
vgind<-which(regexpr('VG', imp$Gebietsbezeichnung)>-1)
kfind<-which(regexpr('Kreisfreie', imp$Gebietsbezeichnung)>-1)
laind<-1
### Splitten
lk<-imp[lkind,]
vg<-imp[vgind,]
kf<-imp[kfind,]
la<-imp[laind,]
vg$Gebietsbezeichnung1<-gsub(", VG","",vg$Gebietsbezeichnung)
vg$Gebietsbezeichnung2<-gsub("-"," ",vg$Gebietsbezeichnung1)
library(sqldf)
rlpframe2<-rlpframe[which(rlpframe$NAME_3!="Bad Kreuznach"),]
vg2<-sqldf("select v.*, coalesce(r1.ID_3,r2.ID_3) as ID_3 from vg v
left join rlpframe2 r1
on v.Gebietsbezeichnung1=r1.NAME_3
left join rlpframe2 r2
on v.Gebietsbezeichnung2=r2.NAME_3")
vg2[, c("ID_3", "Gebietsbezeichnung")]
vg2[which(is.na(vg2$ID_3)), c("Gebietsbezeichnung")]
not_in<-which(!rlpframe$ID_3 %in% as.integer(names(table(vg2$ID_3))))
rlpframe[not_in,c("ID_3", "NAME_3")]
vg2$ID_3[13]<-3635L
vg2$ID_3[14]<-3637L
vg2$ID_3[49]<-3736L
vg2$ID_3[57]<-3782L
vg2$ID_3[150]<-3765L
# Es konnten nicht zugewiesen werden: Bad Kreuznach, VG,  Maikammer, VG,   Rheinauen, VG
###################################################
kf$Gebietsbezeichnung
kf$Gebietsbezeichnung1<-gsub(", Kreisfreie Stadt","",kf$Gebietsbezeichnung)
kf$Gebietsbezeichnung2<-NA
kf2<-sqldf("select k.*, r1.ID_1, r1.ID_2, r1.ID_3  from kf k
left join rlpframe2 r1
on k.Gebietsbezeichnung1=r1.NAME_3")
kf2[, c("ID_3", "Gebietsbezeichnung")]
#vg$Gebietsbezeichnung2<-gsub("-"," ",vg$Gebietsbezeichnung1)
not_in<-which(!rlpframe$ID_3 %in% c(as.integer(names(table(vg2$ID_3))),as.integer(names(table(kf2$ID_3)))) )
rlpframe[not_in,c("ID_3", "NAME_3")]
dim(kf2)
dim(vg2)
vg_temp<-vg2
#dim(vb_kf)
save(list = "vg", file="vg.Rdata")
####################################################
rm(list="rlptemp2")
rlptemp2<-adm2[which(adm2$NAME_1=="Rheinland-Pfalz"),]
rlpframe2<-simlifySpFrame(rlptemp2)
rlpframe2$NAME_2
rlpframe2a<-rlpframe2[which(rlpframe2$NAME_2!="Kaiserslautern"),]
rlpframe2[which(rlpframe2$NAME_2=="Kaiserslautern"),]
lk$Gebietsbezeichnung
lk$Gebietsbezeichnung1<-gsub(", Landkreis","",lk$Gebietsbezeichnung)
lk$Gebietsbezeichnung2<-NA
table(lk$Gebietsbezeichnung1)
table(lk$Gebietsbezeichnung2)
lk2<-sqldf("select k.*, r.ID_1, r.ID_2, 0 as ID_3 from lk k
left join rlpframe2a r
on k.Gebietsbezeichnung1=r.NAME_2")
lk2$ID_1[2]<-11
lk2$ID_2[2]<-298L #Altenkirchen
lk2$ID_1[19]<-11
lk2$ID_2[19]<-310L #Kaiserslautern
#11 Rheinland-Pfalz  310 Kaiserslautern
lk2[, c("ID_2", "Gebietsbezeichnung1")]
dim(kf2)
dim(lk2)
names(kf2)==names(lk2)
lk_kf<-rbind(kf2,lk2)
dim(lk_kf)
#save(list = "lk_kf", file="lk_kf.Rdata")
#####################################################
sum(vb_kf$Wahlberechtigte)
#
sum(lk2$Wahlberechtigte)
sum(vg$Wahlberechtigte)
sum(kf2$Wahlberechtigte)
sum(lk2$Wahlberechtigte)
######### Checksumme #############
sum(kf$Wahlberechtigte)+sum(lk$Wahlberechtigte)
sum(lk_kf$Wahlberechtigte)
sum(la$Wahlberechtigte)
save(list = "temp", file="vg_temp.Rdata")
vg_temp<-vg2
save(list = "temp", file="vg_temp.Rdata")
save(list = "vg_temp", file="vg_temp.Rdata")
load(file="vg_temp.Rdata")
load( file="lk_kf.Rdata")
load(file="vg_temp.Rdata")
source("functions.R")
#lkkf<-lk_kf[,c("Gebietsbezeichnung","ID_1","ID_2","ID_3")]
colnames(lk_kf)
adm2 <- raster::getData('GADM', country='DEU', level=2)
adm2rlp<-adm2[which(adm2$NAME_1=="Rheinland-Pfalz"),]
adm2rlps<-simlifySpFrame(adm2rlp)
lkkf<-sqldf("select lk.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from lk_kf lk left join adm2rlps a on lk.ID_2=a.ID_2")
plot(adm2rlp)
str(adm2rlps)
##############################################################
colnames(vb)
adm3 <- raster::getData('GADM', country='DEU', level=3)
adm3rlp<-adm3[which(adm3$NAME_1=="Rheinland-Pfalz"),]
adm3rlps<-simplifySpFrame(adm3rlp)
str(adm3rlps)
vb_neu<-sqldf("select v.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from vb v left join adm3rlps a on v.ID_3=a.ID_3")
vb<-vb_neu
plot(adm2rlp)
str(adm2rlps)
vg<-sqldf("select v.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from vg_temp v left join adm3rlps a on v.ID_3=a.ID_3")
vg
str(adm2rlps)
str(adm2rlps)
str(vg)
vg$ID_3
load( file="lk_kf.Rdata")
load(file="vg_temp.Rdata")
source("functions.R")
#lkkf<-lk_kf[,c("Gebietsbezeichnung","ID_1","ID_2","ID_3")]
colnames(lk_kf)
adm2 <- raster::getData('GADM', country='DEU', level=2)
adm2rlp<-adm2[which(adm2$NAME_1=="Rheinland-Pfalz"),]
adm2rlps<-simlifySpFrame(adm2rlp)
lkkf<-sqldf("select lk.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from lk_kf lk left join adm2rlps a on lk.ID_2=a.ID_2")
plot(adm2rlp)
str(adm2rlps)
##############################################################
colnames(vb)
adm3 <- raster::getData('GADM', country='DEU', level=3)
adm3rlp<-adm3[which(adm3$NAME_1=="Rheinland-Pfalz"),]
adm3rlps<-simplifySpFrame(adm3rlp)
str(adm3rlps)
vg<-sqldf("select v.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from vg_temp v left join adm3rlps a on v.ID_3=a.ID_3")
vg
str(vg)
vg$ID_3
plot(adm2rlp)
str(adm2rlps)
save(list=c("lkkf", "vg"), file="lk_kf_vg.Rdata")
load( file="lk_kf.Rdata")
load(file="vg_temp.Rdata")
source("functions.R")
colnames(lk_kf)
adm2 <- raster::getData('GADM', country='DEU', level=2)
adm2rlp<-adm2[which(adm2$NAME_1=="Rheinland-Pfalz"),]
adm2rlps<-simlifySpFrame(adm2rlp)
adm2rlps<-simplifySpFrame(adm2rlp)
lkkf<-sqldf("select lk.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from lk_kf lk left join adm2rlps a on lk.ID_2=a.ID_2")
plot(adm2rlp)
str(adm2rlps)
colnames(vb)
colnames(vb)
str(adm2rlps)
colnames(vb)
colnames(vg_temp)
adm3 <- raster::getData('GADM', country='DEU', level=3)
adm3rlp<-adm3[which(adm3$NAME_1=="Rheinland-Pfalz"),]
adm3rlps<-simplifySpFrame(adm3rlp)
str(adm3rlps)
vg<-sqldf("select v.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from vg_temp v left join adm3rlps a on v.ID_3=a.ID_3")
vg
str(vg)
vg$ID_3
plot(adm2rlp)
str(adm2rlps)
save(list=c("lkkf", "vg"), file="lk_kf_vg.Rdata")
load( file="lk_kf.Rdata")
load(file="vg_temp.Rdata")
source("functions.R")
#lkkf<-lk_kf[,c("Gebietsbezeichnung","ID_1","ID_2","ID_3")]
colnames(lk_kf)
adm2 <- raster::getData('GADM', country='DEU', level=2)
adm2rlp<-adm2[which(adm2$NAME_1=="Rheinland-Pfalz"),]
adm2rlps<-simplifySpFrame(adm2rlp)
lkkf<-sqldf("select lk.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2, a.lat, a.lon from lk_kf lk left join adm2rlps a on lk.ID_2=a.ID_2")
plot(adm2rlp)
str(adm2rlps)
##############################################################
colnames(vg_temp)
adm3 <- raster::getData('GADM', country='DEU', level=3)
adm3rlp<-adm3[which(adm3$NAME_1=="Rheinland-Pfalz"),]
adm3rlps<-simplifySpFrame(adm3rlp)
str(adm3rlps)
vg<-sqldf("select v.*, a.OBJECTID, a.ISO, a.NAME_1, a.NAME_2,a.NAME_3, a.lat, a.lon from vg_temp v left join adm3rlps a on v.ID_3=a.ID_3")
vg
str(vg)
vg$ID_3
plot(adm2rlp)
str(adm2rlps)
save(list=c("lkkf", "vg"), file="lk_kf_vg.Rdata")
